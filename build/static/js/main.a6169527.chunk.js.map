{"version":3,"sources":["components/layout/Layout.module.css","components/layout/Banner.module.css","components/layout/Navbar.module.css","components/ui/Card.module.css","components/posts/PostList.module.css","components/ui/ImageProfile.js","components/layout/Navbar.js","components/layout/Banner.js","components/ui/CardFormatter.js","components/posts/PostItem.js","components/posts/PostList.js","components/ui/Form.js","components/posts/PostSection.js","components/layout/Layout.js","components/App.js","serviceWorker.js","index.js","components/posts/PostSection.module.css"],"names":["module","exports","ImageProfile","props","className","width","height","src","Identicon","account","toString","alt","NavigationBar","connectWallet","e","a","preventDefault","window","ethereum","console","log","web3","Web3","enable","eth","getAccounts","setAccount","currentProvider","alert","Navbar","classes","nav","Container","fluid","Toggle","Collapse","Text","variant","buttonConnected","substr","Button","onClick","Banner","id","box","heading","type","loop","wrapper","steps","React","Component","CardFormatter","card","children","PostItem","Card","Header","class","author","Body","content","Footer","PostList","list","posts","map","post","tipAmount","numberOfComments","Form","address","rows","placeholder","document","querySelector","loader","check","classList","add","addEventListener","PostSection","state","userConnected","blogPost","postCount","loading","this","fetchData","net","getId","networkId","networkData","Blog","networks","Contract","abi","setState","methods","call","i","sort","b","background","cube","containerFluid","Row","rowFinder","Col","lg","containerPost","input","Layout","container","main","col4","col8","App","useState","userAccount","setUserAccount","Boolean","location","hostname","match","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.a6169527.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__a4__u\",\"container\":\"Layout_container__2AGid\",\"col4\":\"Layout_col4__3nVPj\",\"col8\":\"Layout_col8__1lmUT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Banner_box__2SdYI\",\"heading\":\"Banner_heading__3HDqF\",\"type\":\"Banner_type__3Klrn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2wxcJ\",\"reference\":\"Navbar_reference__2Z_kr\",\"buttonConnected\":\"Navbar_buttonConnected__3TWOZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__12Cv5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"PostList_list__RZx_1\"};","import Identicon from \"identicon.js\";\r\nimport React from \"react\";\r\n\r\nfunction ImageProfile (props){\r\n    return(\r\n\r\n        <img\r\n            className='ml-2'\r\n            width={props.width || '20'}\r\n            height={props.height || '20'}\r\n            src={`data:image/png;base64,${new Identicon(props.account, 15).toString()}`}\r\n            alt={\"\"}/>\r\n\r\n    )\r\n}\r\nexport default ImageProfile;","import React from 'react'\r\nimport {Container, Navbar, Button} from \"react-bootstrap\";\r\nimport classes from './Navbar.module.css'\r\nimport Web3 from \"web3\";\r\nimport Identicon from 'identicon.js'\r\nimport ImageProfile from \"../ui/ImageProfile\";\r\n\r\n// import Button from '../ui/Button'\r\n\r\nfunction NavigationBar(props) {\r\n\r\n\r\n    const connectWallet = async (e) => {\r\n        e.preventDefault()\r\n        if (window.ethereum) {\r\n            console.log('ETHEREUM')\r\n            window.web3 = new Web3(window.ethereum);\r\n            await window.ethereum.enable()\r\n            props.setAccount(await window.web3.eth.getAccounts())\r\n            // setAccount(accounts[0])\r\n        }\r\n        if (window.web3) {\r\n            console.log('web3')\r\n            window.web3 = new Web3(window.web3.currentProvider)\r\n            // setAccount(accounts[0])\r\n            props.setAccount(await window.web3.eth.getAccounts())\r\n        } else {\r\n            window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\r\n            // <button type=\"button\" class=\"btn btn-primary\">Connect with MetaMask</button>\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Navbar className={classes.nav}>\r\n            <Container fluid>\r\n                <Navbar.Toggle/>\r\n                <Navbar.Collapse className=\"justify-content-end\">\r\n                    <Navbar.Text>\r\n                        {!props.account ?\r\n                            (<div>\r\n                                    <Button variant=\"outline-primary\" onClick={connectWallet}>Connect with\r\n                                        Metamask\r\n                                    </Button>\r\n                                </div>\r\n                            ) : (\r\n                                <div>\r\n\r\n\r\n                                    <div variant=\"outline-primary\" className={classes.buttonConnected}>\r\n                                        Signed in\r\n                                        as: {(props.account).toString().substr(0, 6)}...{(props.account).toString().substr(-4, 4)}\r\n                                        <ImageProfile account={props.account.toString()}/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            )}\r\n                    </Navbar.Text>\r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default NavigationBar;\r\n","import classes from './Banner.module.css'\r\nimport React from 'react'\r\nimport Typical from 'react-typical';\r\n\r\nclass Banner extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div id={classes.box} className={' p-0 p-sm-5'}>\r\n\r\n                <div id={classes.heading} className={' p-0 pt-sm-5'}>\r\n\r\n                    A Chat App <br/> where you can\r\n                </div>\r\n                    <div id={classes.type}>\r\n                        <Typical\r\n                            loop={1} // Infinity\r\n                            wrapper={\"b\"}\r\n                            steps={[' Post', 1000, ' Comment', 1000, ' Interact', 1000]}\r\n                        />\r\n                    </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Banner;","import classes from \"./Card.module.css\"\r\nimport React from 'react'\r\n\r\nfunction CardFormatter(props) {\r\n    return (\r\n        <div className={classes.card}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default CardFormatter","// import classes from './PostItem.css'\r\nimport React from 'react'\r\nimport {Card, Button} from 'react-bootstrap'\r\nimport CardFormatter from \"../ui/CardFormatter\";\r\nimport ImageProfile from \"../ui/ImageProfile\";\r\nimport './PostItem.css'\r\n\r\n\r\nfunction PostItem(props) {\r\n\r\n    function onClickHandler() {\r\n\r\n    }\r\n\r\n    // function clickListener() {\r\n    //     /* when a user clicks, toggle the 'is-animating' class */\r\n    //     var heart = document.querySelector('.heart');\r\n    //     heart.classList.toggle(\"is_animating\");\r\n    //\r\n    // }\r\n\r\n\r\n    return (\r\n        <CardFormatter>\r\n            <Card onClick={onClickHandler}>\r\n                <Card.Header> <ImageProfile class=\"image\" width={'50'} height={'50'}\r\n                                            account={props.author.toString()}/> {props.author}</Card.Header>\r\n                <Card.Body>\r\n                    <Card.Text>\r\n                        {props.content}\r\n                    </Card.Text>\r\n                </Card.Body>\r\n                <Card.Footer>\r\n                    {/*<div class=\"heart\" onClick={clickListener} class={props.author}/>*/}\r\n                    <button class=\"buttonComment\"> Comment</button>\r\n                </Card.Footer>\r\n            </Card>\r\n\r\n        </CardFormatter>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default PostItem","import classes from './PostList.module.css'\r\nimport PostItem from \"./PostItem\";\r\nimport React from 'react'\r\n\r\nfunction PostList(props) {\r\n    return (\r\n        <div className={classes.list}>\r\n\r\n            {props.children}\r\n\r\n            {props.posts.map(post => (\r\n                <PostItem\r\n                    id={post.id}\r\n                    content={post.content}\r\n                    tipAmount={post.tipAmount}\r\n                    author={post.author}\r\n                    numberOfComments={post.numberOfComments}\r\n                />))}\r\n\r\n\r\n        </div>)\r\n}\r\n\r\nexport default PostList;\r\n","import ImageProfile from \"./ImageProfile\";\r\n// import classes from \"./Form.css\";\r\nimport React, {Component} from \"react\";\r\nimport './Form.css';\r\n\r\nfunction Form(props) {\r\n\r\n\r\n    function onClickHandler() {\r\n        var btn = document.querySelector('.button'),\r\n            loader = document.querySelector('.loader'),\r\n            check = document.querySelector('.check');\r\n        loader.classList.add(\"active\");\r\n        // btn.addEventListener(\"click\", function () {\r\n        //     loader.classList.add(\"active\");\r\n        // });\r\n\r\n        loader.addEventListener(\"animationend\", function () {\r\n            check.classList.add(\"active\");\r\n        });\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div class=\"writePostContainer\">\r\n\r\n            <div class=\"useProfile\">\r\n                <ImageProfile class=\"image\" width={'50'} height={'50'} account={props.address.toString()}/>\r\n                <div\r\n                    class={\"name\"}>{(props.address).toString()}\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"postInputContainer\">\r\n                <textarea rows=\"3\" placeholder={\"What's on your mind?\"}/>\r\n            </div>\r\n            <button class=\"button\" onClick={onClickHandler}>Post</button>\r\n            <div class=\"loader\">\r\n                <div class=\"check\">\r\n                    <span class=\"check-one\"/>\r\n                    <span class=\"check-two\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Form","import classes from './PostSection.module.css'\r\nimport React, {Component, useEffect} from 'react'\r\nimport Web3 from 'web3';\r\nimport {Container, Col, FloatingLabel, FormControl, Row} from 'react-bootstrap'\r\nimport CardFormatter from \"../ui/CardFormatter\";\r\nimport Blog from '../../abis/Blog.json'\r\nimport PostList from \"./PostList\";\r\nimport NavigationBar from \"../layout/Navbar\";\r\nimport Banner from \"../layout/Banner\";\r\nimport Form from \"../ui/Form\";\r\n\r\n\r\nclass PostSection extends Component<{ account?: string }> {\r\n\r\n    async componentWillMount() {\r\n        await this.fetchData()\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            userConnected: false,\r\n            blogPost: null,\r\n            postCount: 0,\r\n            posts: [],\r\n            loading: true\r\n        }\r\n\r\n        // this.createPost = this.createPost.bind(this)\r\n        // this.tipPost = this.tipPost.bind(this)\r\n    }\r\n\r\n    async fetchData() {\r\n\r\n        if (window.ethereum) {\r\n            window.web3 = new Web3(window.ethereum)\r\n            // } else if (window.web3) {\r\n            //     window.web3 = new Web3(window.web3.currentProvider)\r\n            // }\r\n            console.log('use effect')\r\n            const web3 = window.web3\r\n            const networkId = await web3.eth.net.getId()\r\n            console.log(networkId.toString())\r\n            const networkData = Blog.networks[networkId]\r\n            console.log(networkData)\r\n            if (networkData) {\r\n                const blogPost = new web3.eth.Contract(Blog.abi, networkData.address)\r\n                this.setState({blogPost})\r\n                const postCount = await blogPost.methods.postCount().call()\r\n                this.setState({postCount})\r\n                console.log(\"Number of Posts: \" + postCount)\r\n                // Load Posts\r\n                for (var i = 1; i <= postCount; i++) {\r\n                    const post = await blogPost.methods.posts(i).call()\r\n                    this.setState({\r\n                        posts: [...this.state.posts, post]\r\n                    })\r\n                }\r\n                // Sort posts. Show highest tipped posts first\r\n                this.setState({\r\n                    posts: this.state.posts.sort((a, b) => b.tipAmount - a.tipAmount)\r\n                })\r\n                this.setState({loading: false})\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div className={classes.background}>\r\n                <div className={classes.cube}/>\r\n                <div className={classes.cube}/>\r\n                <div className={classes.cube}/>\r\n                <div className={classes.cube}/>\r\n                <div className={classes.cube}/>\r\n                <div className={classes.cube}/>\r\n\r\n                {this.state.loading ? <div id=\"loader\" className=\"text-center mt-5\"><p>Loading...</p></div>\r\n                    :\r\n                    (<Container fluid className={classes.containerFluid}>\r\n\r\n                            <Row className={classes.rowFinder}>\r\n                                <Col lg={6} className={classes.containerPost}>\r\n\r\n                                    {!this.props.input ? <div/>\r\n                                        :\r\n                                        <Form address={this.props.input}/>\r\n                                    }\r\n                                    <PostList  posts={this.state.posts}/>\r\n\r\n                                </Col>\r\n                                <Col lg={6}> </Col>\r\n                            </Row>\r\n                        </Container>\r\n\r\n                    )\r\n\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PostSection","import classes from './Layout.module.css'\r\nimport React from 'react'\r\nimport {Container, Row, Col} from 'react-bootstrap'\r\nimport Button from \"react-bootstrap/Button\";\r\nimport NavigationBar from \"./Navbar\";\r\nimport Banner from \"./Banner\";\r\nimport PostSection from \"../posts/PostSection\";\r\n\r\n\r\nfunction Layout(props) {\r\n    return (\r\n\r\n        <Container fluid className={classes.container} className={\"more-pens\"}>\r\n            <NavigationBar account = {props.account} setAccount = {props.setAccount}/>\r\n            <Row className={classes.main}>\r\n                <Col lg={4} className={classes.col4}> <Banner/> </Col>\r\n                <Col lg={8} className={classes.col8}> <PostSection  input = {props.account}/> </Col>\r\n            </Row>\r\n\r\n            <footer id=\"sticky-footer\" className=\"flex-shrink-0 py-4 bg-dark text-white-50\">\r\n                <div className=\"container text-center\">\r\n                    <small>Copyright &copy; Your Website</small>\r\n                </div>\r\n            </footer>\r\n\r\n        </Container>\r\n\r\n    )\r\n}\r\n\r\nexport default Layout","import React, {Component, useEffect, useState} from 'react';\nimport {Route, Switch} from 'react-router-dom';\nimport Web3 from 'web3';\nimport './App.css';\nimport Layout from \"./layout/Layout\";\nimport Button from 'react-bootstrap/Button'\n\nfunction App() {\n\n    const [userAccount, setUserAccount] = useState(null);\n\n\n\n    return (\n\n        <Layout account = {userAccount} setAccount = {setUserAccount}>\n\n        </Layout>\n\n    )\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import {BrowserRouter} from 'react-router-dom'\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n\r\n\r\n     <App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"PostSection_background__2yC37\",\"Gradient\":\"PostSection_Gradient__2p-k1\",\"rowFinder\":\"PostSection_rowFinder__ToS6m\",\"containerPost\":\"PostSection_containerPost__Mjl38\",\"containerFluid\":\"PostSection_containerFluid__28C_N\",\"cube\":\"PostSection_cube__150Aw\"};"],"sourceRoot":""}