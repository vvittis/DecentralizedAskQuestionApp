{"version":3,"sources":["components/posts/PostSection.module.css","components/layout/Layout.module.css","components/layout/Banner.module.css","components/layout/Navbar.module.css","components/posts/PostList.module.css","components/ui/Card.module.css","components/comments/CommentList.module.css","components/ui/ImageProfile.js","components/layout/Navbar.js","components/ui/FormSection.js","components/layout/Banner.js","components/ui/CardFormatter.js","components/comments/AddCommentModal.js","components/posts/PostItem.js","components/posts/PostList.js","components/comments/CommentItem.js","components/comments/CommentList.js","components/posts/PostSection.js","components/layout/Layout.js","components/App.js","index.js"],"names":["module","exports","ImageProfile","props","className","width","height","src","Identicon","account","toString","alt","NavigationBar","connectWallet","e","a","preventDefault","window","ethereum","web3","Web3","enable","eth","getAccounts","user","setAccount","userAccount","currentProvider","alert","Navbar","classes","nav","Container","fluid","Toggle","Collapse","Text","variant","buttonConnected","substr","Button","onClick","FormSection","loader","document","querySelector","check","classList","add","addEventListener","onSubmit","event","title","titleContent","value","content","postContent","createPost","this","address","style","color","id","type","ref","input","placeholder","required","rows","textarea","onClickHandler","Component","Banner","box","heading","loop","Infinity","wrapper","steps","createpost","CardFormatter","card","children","AddCommentModal","Modal","size","aria-labelledby","centered","Header","closeButton","Title","Body","post","Form","postId","postid","answerContent","postitemcommentpost","asnwerbutton","Group","controlId","Footer","onHide","PostItem","state","modalShow","clickHandler","bind","$","concat","toggleClass","commentClicked","Card","key","author","float","display","cursor","backgroundImage","backgroundRepeat","backgroundSize","scale","clickListener","numberOfComments","setState","postListCommentPost","show","PostList","list","posts","map","commentPost","tipAmount","CommentItem","commentid","CommentList","comments","comment","PostSection","commentShow","commentsLength","commentLoading","console","log","blogPost","methods","call","i","getComment","background","cube","loading","containerFluid","Row","rowFinder","Col","containerPost","postLoading","postSectionPosts","scrollSection","scrollIcon","scrollIconDot","Layout","accountAddress","userConnected","postCount","setUserAddress","fetchData","net","getId","networkId","networkData","Blog","networks","Contract","abi","sort","b","send","from","once","receipt","container","main","lg","col4","col8","App","useState","setUserAccount","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.2efc06c0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"PostSection_background__2yC37\",\"Gradient\":\"PostSection_Gradient__2p-k1\",\"rowFinder\":\"PostSection_rowFinder__ToS6m\",\"containerPost\":\"PostSection_containerPost__Mjl38\",\"containerFluid\":\"PostSection_containerFluid__28C_N\",\"cube\":\"PostSection_cube__150Aw\",\"box\":\"PostSection_box__ZmR6Q\",\"title\":\"PostSection_title__3TVAN\",\"scrollSection\":\"PostSection_scrollSection__12qyH\",\"scrollIconDot\":\"PostSection_scrollIconDot__2sTSi\",\"scroll_2\":\"PostSection_scroll_2__2WZ6f\",\"scrollIcon\":\"PostSection_scrollIcon__3DOEV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__a4__u\",\"container\":\"Layout_container__2AGid\",\"col4\":\"Layout_col4__3nVPj\",\"col8\":\"Layout_col8__1lmUT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Banner_box__2SdYI\",\"heading\":\"Banner_heading__3HDqF\",\"type\":\"Banner_type__3Klrn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2wxcJ\",\"reference\":\"Navbar_reference__2Z_kr\",\"buttonConnected\":\"Navbar_buttonConnected__3TWOZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"PostList_list__RZx_1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__12Cv5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"CommentList_list__2ub0b\"};","import Identicon from \"identicon.js\";\r\nimport React from \"react\";\r\n\r\nfunction ImageProfile (props){\r\n    return(\r\n\r\n        <img\r\n            className='ml-2'\r\n            width={props.width || '20'}\r\n            height={props.height || '20'}\r\n            src={`data:image/png;base64,${new Identicon(props.account, 15).toString()}`}\r\n            alt={\"\"}/>\r\n\r\n    )\r\n}\r\nexport default ImageProfile;","import React from 'react'\r\nimport {Container, Navbar, Button} from \"react-bootstrap\";\r\nimport classes from './Navbar.module.css'\r\nimport Web3 from \"web3\";\r\nimport ImageProfile from \"../ui/ImageProfile\";\r\n\r\n\r\nfunction NavigationBar(props) {\r\n\r\n\r\n    const connectWallet = async (e) => {\r\n        e.preventDefault()\r\n        if (window.ethereum) {\r\n            window.web3 = new Web3(window.ethereum);\r\n            await window.ethereum.enable()\r\n            const user = await window.web3.eth.getAccounts()\r\n            props.setAccount(await window.web3.eth.getAccounts())\r\n            props.userAccount(user.toString())\r\n            // setAccount(accounts[0])\r\n        } else if (window.web3) {\r\n            window.web3 = new Web3(window.web3.currentProvider)\r\n            const user = await window.web3.eth.getAccounts()\r\n            props.setAccount(await window.web3.eth.getAccounts())\r\n\r\n            props.userAccount(user.toString())\r\n\r\n        } else {\r\n            window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\r\n            // <button type=\"button\" class=\"btn btn-primary\">Connect with MetaMask</button>\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Navbar className={classes.nav}>\r\n            <Container fluid>\r\n                <Navbar.Toggle/>\r\n                <Navbar.Collapse className=\"justify-content-end\">\r\n                    <Navbar.Text>\r\n                        {!props.account ?\r\n                            (<div>\r\n                                    <Button variant=\"outline-primary\" onClick={connectWallet}>Connect with\r\n                                        Metamask\r\n                                    </Button>\r\n                                </div>\r\n                            ) : (\r\n                                <div>\r\n                                    <div variant=\"outline-primary\" className={classes.buttonConnected}>\r\n                                        Signed in\r\n                                        as: {(props.account).toString().substr(0, 6)}...{(props.account).toString().substr(-4, 4)}\r\n                                        <ImageProfile account={props.account.toString()}/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            )}\r\n                    </Navbar.Text>\r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default NavigationBar;\r\n","import ImageProfile from \"./ImageProfile\";\r\nimport React, {Component} from \"react\";\r\nimport './FormStyle.css';\r\nclass FormSection extends Component {\r\n\r\n\r\n    async onClickHandler() {\r\n        var loader = document.querySelector('.loader'),\r\n            check = document.querySelector('.check');\r\n        loader.classList.add(\"active\");\r\n        loader.addEventListener(\"animationend\", function () {\r\n            check.classList.add(\"active\");\r\n        });\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"outterForm\">\r\n                <form className=\"writePostContainer\"\r\n                      onSubmit={(event) => {\r\n                          event.preventDefault()\r\n                          const title = this.titleContent.value\r\n                          const content = this.postContent.value\r\n                          this.titleContent.value = \"\"\r\n                          this.postContent.value = \"\"\r\n                          this.props.createPost(title, content)\r\n                      }}\r\n                >\r\n                    <div className=\"useProfile\">\r\n                        <ImageProfile className=\"image\" width={'50'} height={'50'} account={this.props.address.toString()}/>\r\n                        <div\r\n                            className={\"name\"}>{(this.props.address).toString()}\r\n                        </div>\r\n                    </div>\r\n                    <hr\r\n                        style={{\r\n                            color: 'grey',\r\n                            // backgroundColor: color,\r\n                            height: 5\r\n                        }}\r\n                    />\r\n                    <div className=\"postInputContainer\">\r\n                        <input\r\n                            id=\"postContent\"\r\n                            type=\"text\"\r\n                            ref={(input) => { this.titleContent = input }}\r\n                            className=\"form-control\"\r\n                            placeholder=\"What is your Question?\"\r\n                            required />\r\n                        <p>&nbsp;</p>\r\n\r\n                    <textarea rows=\"3\"\r\n                              id=\"postContent\"\r\n                              type=\"text\"\r\n                              ref={(textarea) => {\r\n                                  this.postContent = textarea\r\n                              }}\r\n                              className=\"form-control\"\r\n                              placeholder=\"Explain what you are looking for...\"\r\n                              required/>\r\n                    </div>\r\n                    <button type=\"submit\" className=\"button\" onClick={this.onClickHandler}>Ask</button>\r\n                    <div className=\"loader\">\r\n                        <div className=\"check\">\r\n                            <span className=\"check-one\"/>\r\n                            <span className=\"check-two\"/>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default FormSection","import classes from './Banner.module.css'\r\nimport React, {Component} from 'react'\r\nimport Typical from 'react-typical';\r\nimport FormSection from \"../ui/FormSection\";\r\n\r\nclass Banner extends Component {\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div id={classes.box} className={' p-0 p-sm-5'}>\r\n\r\n                <div id={classes.heading} className={' p-0 pt-sm-5'}>\r\n\r\n                    An Ask Question App <br/> where you can\r\n                </div>\r\n                    <div id={classes.type}>\r\n                        <Typical\r\n                            loop={Infinity} // Infinity\r\n                            wrapper={\"b\"}\r\n                            steps={['Ask', 1000, 'Answer', 1000, 'Like', 1000]}\r\n                        />\r\n                    </div>\r\n                {!this.props.input ? <div/>\r\n                    :\r\n                    <FormSection createPost={this.props.createpost} address={this.props.input}/>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Banner;","import classes from \"./Card.module.css\"\r\nimport React from 'react'\r\n\r\nfunction CardFormatter(props) {\r\n    return (\r\n        <div className={classes.card}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default CardFormatter","import React, {Component} from \"react\";\r\nimport {Modal, Button, Form} from \"react-bootstrap\";\r\n\r\nclass AddCommentModal extends Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Modal\r\n                {...this.props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Help Other by Answering their Questions\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <h5>The Question is:</h5>\r\n                    <h6>{this.props.post}</h6>\r\n                    <Form\r\n                        onSubmit={(event) => {\r\n                            event.preventDefault()\r\n                            const postId = this.props.postid\r\n                            const content = this.answerContent.value\r\n                            // console.log(postId.toNumber(),content.toString())\r\n                            this.props.postitemcommentpost(postId, content)\r\n                            this.props.asnwerbutton()\r\n                        }}>\r\n                        <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\r\n                            <div className=\"postInputContainer\">\r\n                                <textarea\r\n                                    id=\"postContent\"\r\n                                    rows=\"3\"\r\n                                    type=\"text\"\r\n                                    ref={(textarea) => {\r\n                                        this.answerContent = textarea\r\n                                    }}\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"What is your Answer?\"\r\n                                    required/>\r\n                            </div>\r\n                        </Form.Group>\r\n                        <Modal.Footer>\r\n                            <Button type=\"submit\" onClick={this.props.onHide}>Answer</Button>\r\n                        </Modal.Footer>\r\n                    </Form>\r\n                </Modal.Body>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddCommentModal;\r\n\r\n","import React, {Component} from 'react'\r\nimport {Card} from 'react-bootstrap'\r\nimport CardFormatter from \"../ui/CardFormatter\";\r\nimport ImageProfile from \"../ui/ImageProfile\";\r\nimport './PostItem.css'\r\nimport $ from 'jquery';\r\nimport AddCommentModal from \"../comments/AddCommentModal\";\r\n\r\nclass PostItem extends Component {\r\n\r\n    async clickListener(input) { $('#'.concat(input)).toggleClass('is_animating');   }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            modalShow: false,\r\n            postid: this.props.id\r\n        };\r\n        this.clickHandler = this.clickHandler.bind(this)\r\n\r\n    }\r\n    async clickHandler(){\r\n        this.props.commentClicked(this.props.id)\r\n    }\r\n    render() {\r\n        const mystyle = {\r\n            float: 'left',\r\n            display: 'inline-block',\r\n            cursor: 'pointer',\r\n            height: '40px',\r\n            width: '40px',\r\n            backgroundImage: `url(\"https://abs.twimg.com/a/1446542199/img/t1/web_heart_animation.png\")`,\r\n            backgroundRepeat: 'no-repeat',\r\n            backgroundSize: '2900%',\r\n            scale: '2'\r\n        };\r\n\r\n        return (\r\n            <CardFormatter>\r\n\r\n                <Card key={this.props.id}>\r\n                    <Card.Header> <ImageProfile className=\"image\" width={'50'} height={'50'}\r\n                                                account={this.props.author.toString()}/> {this.props.author}\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Card.Title><strong>{this.props.title} </strong></Card.Title>\r\n                        <Card.Text>\r\n                            {this.props.content}\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                    <Card.Footer>\r\n                        <span style={mystyle} onClick={() => this.clickListener(\"heart\".concat(this.props.id))}\r\n                              id={\"heart\".concat(this.props.id)}>\r\n                           </span>\r\n\r\n                        <div className=\"numberOfComments\" onClick={this.clickHandler}> <i className=\"far fa-comment\"/> {this.props.numberOfComments}</div>\r\n\r\n                        <>\r\n                            {!this.props.account? <div/>:\r\n                            <button onClick={() => this.setState({modalShow: true})} className=\"buttonComment\"> Answer\r\n                            </button>\r\n                                }\r\n                            <AddCommentModal\r\n                                asnwerbutton={this.clickHandler}\r\n                                postitemcommentpost={this.props.postListCommentPost}\r\n                                postid = {this.props.id}\r\n                                show={this.state.modalShow}\r\n                                post={this.props.content}\r\n                                onHide={() => {\r\n                                    this.setState({modalShow: false})\r\n                                }}\r\n                            />\r\n                        </>\r\n                    </Card.Footer>\r\n                </Card>\r\n\r\n            </CardFormatter>\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default PostItem","import classes from './PostList.module.css'\r\nimport PostItem from \"./PostItem\";\r\nimport React, {Component} from 'react'\r\n\r\nclass PostList extends Component {\r\n    render() {\r\n        return (\r\n            <div className={classes.list}>\r\n                {this.props.children}\r\n                {this.props.posts.map(post => (\r\n                    <PostItem\r\n                        commentClicked={this.props.commentClicked}\r\n                        account={this.props.account}\r\n                        postListCommentPost={this.props.commentPost}\r\n                        id={post.id}\r\n                        title={post.title}\r\n                        content={post.content}\r\n                        tipAmount={post.tipAmount}\r\n                        author={post.author}\r\n                        numberOfComments={post.numberOfComments}\r\n                    />))\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PostList;\r\n","import React, {Component} from 'react'\r\nimport {Card} from 'react-bootstrap'\r\nimport CardFormatter from \"../ui/CardFormatter\";\r\nimport ImageProfile from \"../ui/ImageProfile\";\r\nimport '../posts/PostItem.css'\r\n\r\nclass CommentItem extends Component {\r\n\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <CardFormatter>\r\n                {this.props.commentid}\r\n                <Card key={this.props.commentid}>\r\n                    <Card.Header>\r\n                        <ImageProfile className=\"image\" width={'50'} height={'50'}\r\n                                                account={this.props.author.toString()}/>{this.props.author}\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Card.Text>\r\n                            {/*{this.props.commentid}*/}\r\n                            {this.props.content}\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n\r\n                </Card>\r\n\r\n            </CardFormatter>\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default CommentItem","import classes from './CommentList.module.css'\r\nimport React, {Component} from 'react'\r\nimport CommentItem from \"./CommentItem\";\r\n\r\nclass CommentList extends Component {\r\n    render() {\r\n        return (\r\n            <div className={classes.list}>\r\n                {this.props.children}\r\n                {this.props.comments.map(comment => (\r\n                    <CommentItem\r\n                        commentid={comment.commentid}\r\n                        author={comment.author}\r\n                        content={comment.content}\r\n                    />))\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CommentList;\r\n","import classes from './PostSection.module.css'\r\nimport React, {Component} from 'react'\r\nimport {Container, Col, Row} from 'react-bootstrap'\r\nimport PostList from \"./PostList\";\r\n// import CommentSection from '../comments/CommentSection'\r\nimport CommentList from \"../comments/CommentList\";\r\n\r\n// import classes1 from \"./PostSection.module.css\";\r\n\r\n\r\nclass PostSection extends Component {\r\n\r\n    async componentWillMount() {\r\n        if (this.props.commentLoading) {\r\n            console.log(this.props.commentLoading)\r\n        }\r\n    }\r\n\r\n\r\n    async onClickHandler(postId) {\r\n        // this.state.postid = postId\r\n\r\n        this.setState({commentShow: true})\r\n\r\n        this.setState({postid: postId}, async function () {\r\n            const post = await this.props.blogPost.methods.posts(this.state.postid).call()\r\n\r\n            this.setState({commentsLength: post.numberOfComments}, async function () {\r\n\r\n                this.setState({comments: []})\r\n                for (var i = 1; i <= this.state.commentsLength; i++) {\r\n                    const comment = await this.props.blogPost.methods.getComment(post.id, i).call();\r\n                    this.setState({\r\n                        comments: [...this.state.comments, comment]\r\n                    })\r\n                }\r\n                console.log(this.state.comments)\r\n            })\r\n\r\n        })\r\n\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            commentShow: false,\r\n            commentsLength: 0,\r\n            postid: 0,\r\n            comments: []\r\n        }\r\n\r\n        this.onClickHandler = this.onClickHandler.bind(this)\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div className={classes.background}>\r\n                <div className={classes.cube}/>\r\n                <div className={classes.cube}/>\r\n                <div className={classes.cube}/>\r\n                <div className={classes.cube}/>\r\n                <div className={classes.cube}/>\r\n                <div className={classes.cube}/>\r\n\r\n                {this.props.loading ? <div id=\"loader\" className=\"text-center mt-5\"><p>Loading Posts...</p></div>\r\n                    :\r\n                    (<Container fluid className={classes.containerFluid}>\r\n\r\n                        <Row className={classes.rowFinder}>\r\n\r\n                            <Col className={classes.containerPost}>\r\n\r\n\r\n                                {this.props.postLoading ?\r\n                                    <div id=\"loader\" className=\"text-center mt-5\"><p>Loading Posts...</p></div> :\r\n                                    <div className={classes.containerPost}>\r\n                                        <div className={classes.title}>Posts</div>\r\n                                        <PostList commentClicked={this.onClickHandler}\r\n                                                  account={this.props.account}\r\n                                                  commentPost={this.props.commentPost}\r\n                                                  posts={this.props.postSectionPosts}/>\r\n                                        <div className={classes.scrollSection}>\r\n                                                                <span className={classes.scrollIcon}>\r\n                                                                       <span className={classes.scrollIconDot}/>\r\n                                                                </span>\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n                            </Col>\r\n                            <Col className={classes.containerPost}>\r\n                                {this.props.commentLoading ? <div> Loading Comments...</div> :\r\n                                    <>\r\n                                        {!this.state.commentShow ? <div/> :\r\n                                            <div className={classes.containerPost}>\r\n                                                <div className={classes.title}>Answers</div>\r\n\r\n                                                <CommentList\r\n                                                    comments={this.state.comments}\r\n                                                />\r\n                                                <div className={classes.scrollSection}>\r\n                                    <span className={classes.scrollIcon}>\r\n                                    <span className={classes.scrollIconDot}/>\r\n                                    </span>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        }\r\n                                    </>\r\n                                }\r\n\r\n\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>)}\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default PostSection","import classes from './Layout.module.css'\r\nimport React, {Component} from 'react'\r\nimport {Container, Row, Col} from 'react-bootstrap'\r\nimport NavigationBar from \"./Navbar\";\r\nimport Banner from \"./Banner\";\r\nimport PostSection from \"../posts/PostSection\";\r\nimport Web3 from \"web3\";\r\nimport Blog from \"../../abis/Blog.json\";\r\n\r\n\r\nclass Layout extends Component {\r\n\r\n\r\n    async componentWillMount() {\r\n\r\n        await this.fetchData()\r\n    }\r\n\r\n\r\n    async fetchData() {\r\n\r\n        if (window.ethereum) {\r\n\r\n            window.web3 = new Web3(window.ethereum)\r\n            // } else\r\n            // if (window.web3) {\r\n            // window.web3 = new Web3(window.web3.currentProvider)\r\n            // window.web3 = new Web3(window.ethereum)\r\n            const web3 = window.web3\r\n            const networkId = await web3.eth.net.getId()\r\n            const networkData = Blog.networks[networkId]\r\n            if (networkData) {\r\n                this.setState({loading: false})\r\n                this.setState({postLoading: false})\r\n                const blogPost = new web3.eth.Contract(Blog.abi, networkData.address)\r\n                this.setState({blogPost: blogPost})\r\n                const postCount = await blogPost.methods.postCount().call()\r\n                this.setState({postCount: postCount})\r\n                // Load Posts\r\n                this.setState({posts: []})\r\n                for (var i = 1; i <= postCount; i++) {\r\n                    const post = await blogPost.methods.posts(i).call()\r\n                    this.setState({\r\n                        posts: [...this.state.posts, post]\r\n                    })\r\n                }\r\n                // Sort posts. Show highest tipped posts first\r\n                this.setState({\r\n                    posts: this.state.posts.sort((a, b) => b.id - a.id)\r\n                })\r\n                this.setState({loading: false})\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    async createPost(title, content) {\r\n        this.setState({postLoading: true})\r\n        this.state.blogPost.methods.createPost(title, content).send({from: this.props.account.toString()})\r\n            .once('receipt', (receipt) => {\r\n                this.fetchData()\r\n                this.setState({postLoading: false})\r\n                console.log(this.state.accountAddress)\r\n            })\r\n    }\r\n\r\n    async commentPost(id, content) {\r\n        this.setState({postLoading: true})\r\n        this.setState({commentLoading: true})\r\n        this.state.blogPost.methods.commentPost(id, content).send({from: this.state.accountAddress})\r\n            .once('receipt', (receipt) => {\r\n                this.fetchData()\r\n                this.setState({commentLoading: false})\r\n                this.setState({postLoading: false})\r\n            })\r\n    }\r\n\r\n    async setUserAddress(input) {\r\n        this.setState({accountAddress: input})\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            accountAddress: '',\r\n            userConnected: false,\r\n            blogPost: null,\r\n            postCount: 0,\r\n            posts: [],\r\n            loading: true,\r\n            commentLoading: false,\r\n            postLoading: true\r\n        }\r\n\r\n        this.createPost = this.createPost.bind(this)\r\n        this.commentPost = this.commentPost.bind(this)\r\n        this.setUserAddress = this.setUserAddress.bind(this)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <Container fluid className={classes.container}>\r\n                <NavigationBar userAccount={this.setUserAddress} account={this.props.account}\r\n                               setAccount={this.props.setAccount}/>\r\n                <Row className={classes.main}>\r\n                    <Col lg={4} className={classes.col4}> <Banner\r\n                        createpost={this.createPost}\r\n                        input={this.props.account}\r\n\r\n                    /> </Col>\r\n                    <Col lg={8} className={classes.col8}> <PostSection\r\n                        commentLoading={this.state.commentLoading}\r\n                        blogPost={this.state.blogPost}\r\n                        account={this.props.account}\r\n                        loading={this.state.loading}\r\n                        postLoading={this.state.postLoading}\r\n                        postSectionPosts={this.state.posts}\r\n                        commentPost={this.commentPost}\r\n                        input={this.props.account}/> </Col>\r\n                </Row>\r\n\r\n                <footer id=\"sticky-footer\" className=\"flex-shrink-0 py-4 bg-dark text-white-50\">\r\n                    <div className=\"container text-center\">\r\n                        <small>Copyright &copy; billvittis.eth</small>\r\n                    </div>\r\n                </footer>\r\n\r\n            </Container>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Layout","import React, {useState} from 'react';\n\nimport './App.css';\nimport Layout from \"./layout/Layout\";\n\n\nfunction App() {\n    const [userAccount, setUserAccount] = useState(null);\n    return (\n        <Layout account = {userAccount} setAccount = {setUserAccount}>\n        </Layout>\n    )\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n\r\n\r\n     <App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\n"],"sourceRoot":""}