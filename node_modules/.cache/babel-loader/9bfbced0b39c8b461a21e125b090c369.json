{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VASILISVITTIS\\\\Documents\\\\main\\\\src\\\\components\\\\layout\\\\Banner.js\";\nimport classes from './Banner.module.css';\nimport React from 'react';\nimport Typical from 'react-typical';\nimport FormSection from \"../ui/FormSection\";\nimport Web3 from \"web3\";\nimport Blog from \"../../abis/Blog.json\";\n\nclass Banner extends React.Component {\n  async componentWillMount() {\n    await this.fetchData();\n  }\n\n  async fetchData() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum); // } else\n      // if (window.web3) {\n      // window.web3 = new Web3(window.web3.currentProvider)\n      // window.web3 = new Web3(window.ethereum)\n\n      try {\n        this.setState({\n          accountAddress: this.props.input.toString\n        });\n      } catch (e) {\n        console.log(\"no account yet\");\n      }\n\n      console.log('use effect');\n      const web3 = window.web3;\n      this.setState({\n        accountAddress: this.props.input\n      });\n      const networkId = await web3.eth.net.getId();\n      console.log(networkId.toString());\n      const networkData = Blog.networks[networkId];\n      console.log(networkData);\n\n      if (networkData) {\n        this.setState({\n          loading: false\n        });\n        this.setState({\n          postLoading: false\n        });\n        const blogPost = new web3.eth.Contract(Blog.abi, networkData.address);\n        this.setState({\n          blogPost: blogPost\n        });\n        const postCount = await blogPost.methods.postCount().call();\n        this.setState({\n          postCount: postCount\n        });\n        console.log(\"Number of Posts: \" + this.state.postCount); // Load Posts\n\n        this.setState({\n          posts: []\n        });\n\n        for (var i = 1; i <= postCount; i++) {\n          const post = await blogPost.methods.posts(i).call();\n          this.setState({\n            posts: [...this.state.posts, post]\n          });\n        } // Sort posts. Show highest tipped posts first\n\n\n        this.setState({\n          posts: this.state.posts.sort((a, b) => b.id - a.id)\n        });\n        this.setState({\n          loading: false\n        });\n      }\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      accountAddress: '',\n      userConnected: false,\n      blogPost: null,\n      postCount: 0,\n      posts: [],\n      loading: true,\n      postLoading: true\n    };\n    this.createPost = this.createPost.bind(this); // this.tipPost = this.tipPost.bind(this)\n  }\n\n  async createPost(title, content) {\n    this.setState({\n      postLoading: true\n    });\n    this.state.blogPost.methods.createPost(title, content).send({\n      from: this.props.input.toString()\n    }).once('receipt', receipt => {\n      this.fetchData();\n      this.setState({\n        postLoading: false\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: classes.box,\n      className: ' p-0 p-sm-5',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: classes.heading,\n      className: ' p-0 pt-sm-5',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, \"An Ask Question App \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 41\n      }\n    }), \" where you can\"), /*#__PURE__*/React.createElement(\"div\", {\n      id: classes.type,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Typical, {\n      loop: Infinity // Infinity\n      ,\n      wrapper: \"b\",\n      steps: [' Ask', 1000, ' Comment', 1000, ' Like', 1000],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }\n    })), !this.props.input ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 38\n      }\n    }) : /*#__PURE__*/React.createElement(FormSection, {\n      createPost: this.createPost,\n      address: this.props.input,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    }));\n  }\n\n}\n\nexport default Banner;","map":{"version":3,"sources":["C:/Users/VASILISVITTIS/Documents/main/src/components/layout/Banner.js"],"names":["classes","React","Typical","FormSection","Web3","Blog","Banner","Component","componentWillMount","fetchData","window","ethereum","web3","setState","accountAddress","props","input","toString","e","console","log","networkId","eth","net","getId","networkData","networks","loading","postLoading","blogPost","Contract","abi","address","postCount","methods","call","state","posts","i","post","sort","a","b","id","constructor","userConnected","createPost","bind","title","content","send","from","once","receipt","render","box","heading","type","Infinity"],"mappings":"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","sourcesContent":["import classes from './Banner.module.css'\r\nimport React from 'react'\r\nimport Typical from 'react-typical';\r\nimport FormSection from \"../ui/FormSection\";\r\nimport Web3 from \"web3\";\r\nimport Blog from \"../../abis/Blog.json\";\r\n\r\nclass Banner extends React.Component {\r\n    async componentWillMount() {\r\n\r\n        await this.fetchData()\r\n    }\r\n\r\n\r\n    async fetchData() {\r\n\r\n        if (window.ethereum) {\r\n\r\n            window.web3 = new Web3(window.ethereum)\r\n            // } else\r\n            // if (window.web3) {\r\n            // window.web3 = new Web3(window.web3.currentProvider)\r\n            // window.web3 = new Web3(window.ethereum)\r\n            try {\r\n                this.setState({accountAddress: this.props.input.toString})\r\n            } catch (e) {\r\n                console.log(\"no account yet\")\r\n            }\r\n\r\n\r\n            console.log('use effect')\r\n            const web3 = window.web3\r\n            this.setState({accountAddress: this.props.input})\r\n            const networkId = await web3.eth.net.getId()\r\n            console.log(networkId.toString())\r\n            const networkData = Blog.networks[networkId]\r\n            console.log(networkData)\r\n            if (networkData) {\r\n                this.setState({loading: false})\r\n                this.setState({postLoading: false})\r\n                const blogPost = new web3.eth.Contract(Blog.abi, networkData.address)\r\n                this.setState({blogPost: blogPost})\r\n                const postCount = await blogPost.methods.postCount().call()\r\n                this.setState({postCount: postCount})\r\n                console.log(\"Number of Posts: \" + this.state.postCount)\r\n                // Load Posts\r\n                this.setState({posts: []})\r\n                for (var i = 1; i <= postCount; i++) {\r\n                    const post = await blogPost.methods.posts(i).call()\r\n                    this.setState({\r\n                        posts: [...this.state.posts, post]\r\n                    })\r\n                }\r\n                // Sort posts. Show highest tipped posts first\r\n                this.setState({\r\n                    posts: this.state.posts.sort((a, b) => b.id - a.id)\r\n                })\r\n                this.setState({loading: false})\r\n            }\r\n        }\r\n\r\n    }\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            accountAddress: '',\r\n            userConnected: false,\r\n            blogPost: null,\r\n            postCount: 0,\r\n            posts: [],\r\n            loading: true,\r\n            postLoading: true\r\n        }\r\n\r\n        this.createPost = this.createPost.bind(this)\r\n        // this.tipPost = this.tipPost.bind(this)\r\n    }\r\n    async createPost(title, content) {\r\n        this.setState({postLoading: true})\r\n        this.state.blogPost.methods.createPost(title, content).send({from: this.props.input.toString()})\r\n            .once('receipt', (receipt) => {\r\n                this.fetchData()\r\n                this.setState({postLoading: false})\r\n            })\r\n\r\n    }\r\n    render() {\r\n        return (\r\n\r\n            <div id={classes.box} className={' p-0 p-sm-5'}>\r\n\r\n                <div id={classes.heading} className={' p-0 pt-sm-5'}>\r\n\r\n                    An Ask Question App <br/> where you can\r\n                </div>\r\n                    <div id={classes.type}>\r\n                        <Typical\r\n                            loop={Infinity} // Infinity\r\n                            wrapper={\"b\"}\r\n                            steps={[' Ask', 1000, ' Comment', 1000, ' Like', 1000]}\r\n                        />\r\n                    </div>\r\n                {!this.props.input ? <div/>\r\n                    :\r\n                    <FormSection createPost={this.createPost} address={this.props.input}/>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Banner;"]},"metadata":{},"sourceType":"module"}