{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VASILISVITTIS\\\\Documents\\\\main\\\\src\\\\components\\\\layout\\\\Layout.js\";\nimport classes from './Layout.module.css';\nimport React, { Component } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport Button from \"react-bootstrap/Button\";\nimport NavigationBar from \"./Navbar\";\nimport Banner from \"./Banner\";\nimport PostSection from \"../posts/PostSection\";\nimport Web3 from \"web3\";\nimport Blog from \"../../abis/Blog.json\";\n\nclass Layout extends Component {\n  async componentWillMount() {\n    await this.fetchData();\n  }\n\n  async fetchData() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum); // } else\n      // if (window.web3) {\n      // window.web3 = new Web3(window.web3.currentProvider)\n      // window.web3 = new Web3(window.ethereum)\n\n      try {\n        this.setState({\n          accountAddress: this.props.input.toString\n        });\n      } catch (e) {\n        console.log(\"no account yet\");\n      }\n\n      console.log('use effect');\n      const web3 = window.web3;\n      this.setState({\n        accountAddress: this.props.input\n      });\n      const networkId = await web3.eth.net.getId();\n      console.log(networkId.toString());\n      const networkData = Blog.networks[networkId];\n      console.log(networkData);\n\n      if (networkData) {\n        this.setState({\n          loading: false\n        });\n        this.setState({\n          postLoading: false\n        });\n        const blogPost = new web3.eth.Contract(Blog.abi, networkData.address);\n        this.setState({\n          blogPost: blogPost\n        });\n        const postCount = await blogPost.methods.postCount().call();\n        this.setState({\n          postCount: postCount\n        });\n        console.log(\"Number of Posts: \" + this.state.postCount); // Load Posts\n\n        this.setState({\n          posts: []\n        });\n\n        for (var i = 1; i <= postCount; i++) {\n          const post = await blogPost.methods.posts(i).call();\n          this.setState({\n            posts: [...this.state.posts, post]\n          });\n        } // Sort posts. Show highest tipped posts first\n\n\n        this.setState({\n          posts: this.state.posts.sort((a, b) => b.id - a.id)\n        });\n        this.setState({\n          loading: false\n        });\n      }\n    }\n  }\n\n  async createPost(title, content) {\n    this.setState({\n      postLoading: true\n    });\n    this.state.blogPost.methods.createPost(title, content).send({\n      from: this.props.input.toString()\n    }).once('receipt', receipt => {\n      this.fetchData();\n      this.setState({\n        postLoading: false\n      });\n    });\n  }\n\n  async commentPost(id, content) {\n    console.log(\"uber drifer\");\n    console.log(id);\n    console.log(content);\n    this.setState({\n      postLoading: true\n    });\n    this.state.blogPost.methods.commentPost(id, content).send({\n      from: this.props.input.toString()\n    }).once('receipt', receipt => {\n      this.fetchData();\n      this.setState({\n        postLoading: false\n      });\n    });\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      accountAddress: '',\n      userConnected: false,\n      blogPost: null,\n      postCount: 0,\n      posts: [],\n      loading: true,\n      postLoading: true\n    };\n    this.createPost = this.createPost.bind(this);\n    this.commentPost = this.commentPost.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      className: classes.container,\n      className: \"more-pens\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NavigationBar, {\n      account: this.props.account,\n      setAccount: this.props.setAccount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      className: classes.main,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      lg: 4,\n      className: classes.col4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }\n    }, \" \", /*#__PURE__*/React.createElement(Banner, {\n      loading: this.state.loading,\n      postLoading: this.state.postLoading,\n      createpost: this.createPost,\n      input: this.props.account,\n      postSectionPosts: this.state.posts,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 59\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(Col, {\n      lg: 8,\n      className: classes.col8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }\n    }, \" \", /*#__PURE__*/React.createElement(PostSection, {\n      commentPost: this.commentPost,\n      input: this.props.account,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 59\n      }\n    }), \" \")), /*#__PURE__*/React.createElement(\"footer\", {\n      id: \"sticky-footer\",\n      className: \"flex-shrink-0 py-4 bg-dark text-white-50\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 25\n      }\n    }, \"Copyright \\xA9 Your Website\"))));\n  }\n\n}\n\nexport default Layout;","map":{"version":3,"sources":["C:/Users/VASILISVITTIS/Documents/main/src/components/layout/Layout.js"],"names":["classes","React","Component","Container","Row","Col","Button","NavigationBar","Banner","PostSection","Web3","Blog","Layout","componentWillMount","fetchData","window","ethereum","web3","setState","accountAddress","props","input","toString","e","console","log","networkId","eth","net","getId","networkData","networks","loading","postLoading","blogPost","Contract","abi","address","postCount","methods","call","state","posts","i","post","sort","a","b","id","createPost","title","content","send","from","once","receipt","commentPost","constructor","userConnected","bind","render","container","account","setAccount","main","col4","col8"],"mappings":"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","sourcesContent":["import classes from './Layout.module.css'\r\nimport React, {Component} from 'react'\r\nimport {Container, Row, Col} from 'react-bootstrap'\r\nimport Button from \"react-bootstrap/Button\";\r\nimport NavigationBar from \"./Navbar\";\r\nimport Banner from \"./Banner\";\r\nimport PostSection from \"../posts/PostSection\";\r\nimport Web3 from \"web3\";\r\nimport Blog from \"../../abis/Blog.json\";\r\n\r\n\r\nclass Layout extends Component {\r\n\r\n\r\n    async componentWillMount() {\r\n\r\n        await this.fetchData()\r\n    }\r\n\r\n\r\n    async fetchData() {\r\n\r\n        if (window.ethereum) {\r\n\r\n            window.web3 = new Web3(window.ethereum)\r\n            // } else\r\n            // if (window.web3) {\r\n            // window.web3 = new Web3(window.web3.currentProvider)\r\n            // window.web3 = new Web3(window.ethereum)\r\n            try {\r\n                this.setState({accountAddress: this.props.input.toString})\r\n            } catch (e) {\r\n                console.log(\"no account yet\")\r\n            }\r\n\r\n\r\n            console.log('use effect')\r\n            const web3 = window.web3\r\n            this.setState({accountAddress: this.props.input})\r\n            const networkId = await web3.eth.net.getId()\r\n            console.log(networkId.toString())\r\n            const networkData = Blog.networks[networkId]\r\n            console.log(networkData)\r\n            if (networkData) {\r\n                this.setState({loading: false})\r\n                this.setState({postLoading: false})\r\n                const blogPost = new web3.eth.Contract(Blog.abi, networkData.address)\r\n                this.setState({blogPost: blogPost})\r\n                const postCount = await blogPost.methods.postCount().call()\r\n                this.setState({postCount: postCount})\r\n                console.log(\"Number of Posts: \" + this.state.postCount)\r\n                // Load Posts\r\n                this.setState({posts: []})\r\n                for (var i = 1; i <= postCount; i++) {\r\n                    const post = await blogPost.methods.posts(i).call()\r\n                    this.setState({\r\n                        posts: [...this.state.posts, post]\r\n                    })\r\n                }\r\n                // Sort posts. Show highest tipped posts first\r\n                this.setState({\r\n                    posts: this.state.posts.sort((a, b) => b.id - a.id)\r\n                })\r\n                this.setState({loading: false})\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    async createPost(title, content) {\r\n        this.setState({postLoading: true})\r\n        this.state.blogPost.methods.createPost(title, content).send({from: this.props.input.toString()})\r\n            .once('receipt', (receipt) => {\r\n                this.fetchData()\r\n                this.setState({postLoading: false})\r\n            })\r\n    }\r\n\r\n    async commentPost(id, content) {\r\n        console.log(\"uber drifer\")\r\n        console.log(id)\r\n        console.log(content)\r\n        this.setState({postLoading: true})\r\n        this.state.blogPost.methods.commentPost(id, content).send({from: this.props.input.toString()})\r\n            .once('receipt', (receipt) => {\r\n                this.fetchData()\r\n                this.setState({postLoading: false})\r\n            })\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            accountAddress: '',\r\n            userConnected: false,\r\n            blogPost: null,\r\n            postCount: 0,\r\n            posts: [],\r\n            loading: true,\r\n            postLoading: true\r\n        }\r\n\r\n        this.createPost = this.createPost.bind(this)\r\n        this.commentPost = this.commentPost.bind(this)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <Container fluid className={classes.container} className={\"more-pens\"}>\r\n                <NavigationBar account={this.props.account} setAccount={this.props.setAccount}/>\r\n                <Row className={classes.main}>\r\n                    <Col lg={4} className={classes.col4}> <Banner\r\n                        loading={this.state.loading}\r\n                        postLoading={this.state.postLoading}\r\n                        createpost={this.createPost}\r\n                        input={this.props.account}\r\n                        postSectionPosts={this.state.posts}\r\n                    /> </Col>\r\n                    <Col lg={8} className={classes.col8}> <PostSection commentPost={this.commentPost} input={this.props.account}/> </Col>\r\n                </Row>\r\n\r\n                <footer id=\"sticky-footer\" className=\"flex-shrink-0 py-4 bg-dark text-white-50\">\r\n                    <div className=\"container text-center\">\r\n                        <small>Copyright &copy; Your Website</small>\r\n                    </div>\r\n                </footer>\r\n\r\n            </Container>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Layout"]},"metadata":{},"sourceType":"module"}