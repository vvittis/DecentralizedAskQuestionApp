{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VASILISVITTIS\\\\Documents\\\\main\\\\src\\\\components\\\\posts\\\\PostSection.js\";\nimport classes from './PostSection.module.css';\nimport React, { Component } from 'react';\nimport { Container, Col, Row } from 'react-bootstrap';\nimport PostList from \"./PostList\";\nimport CommentSection from '../comments/CommentSection';\n\nclass PostSection extends Component {\n  async componentWillMount() {\n    await this.fetchData();\n  }\n\n  async fetchData() {\n    if (this.props.blogPost != null) {\n      const post = await this.props.blogPost.methods.posts(this.state.postid).call();\n      this.setState({\n        commentsLength: post.numberOfComments\n      });\n      this.setState({\n        comments: []\n      });\n\n      for (var i = 1; i <= this.state.commentsLength; i++) {\n        const comment = await this.props.blogPost.methods.getComment(post.id, i).call();\n        this.setState({\n          comments: [...this.state.comments, comment]\n        });\n      }\n    }\n  }\n\n  async onClickHandler(postId) {\n    // this.state.postid = postId\n    this.setState({\n      commentShow: true\n    });\n    this.setState({\n      postid: postId\n    }, async function () {\n      const post = await this.props.blogPost.methods.posts(this.state.postid).call();\n      this.setState({\n        commentsLength: post.numberOfComments\n      });\n      this.setState({\n        comments: []\n      });\n\n      for (var i = 1; i <= this.state.commentsLength; i++) {\n        const comment = await this.props.blogPost.methods.getComment(post.id, i).call();\n        this.setState({\n          comments: [...this.state.comments, comment]\n        });\n      }\n\n      this.setState({\n        commentShow: true\n      });\n    });\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      commentShow: false,\n      commentsLength: 0,\n      postid: 0,\n      comments: []\n    };\n    this.onClickHandler = this.onClickHandler.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.background,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.cube,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.cube,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.cube,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.cube,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.cube,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.cube,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }), this.props.loading ? /*#__PURE__*/React.createElement(\"div\", {\n      id: \"loader\",\n      className: \"text-center mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 39\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 85\n      }\n    }, \"Loading...\")) : /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      className: classes.containerFluid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: classes.rowFinder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      className: classes.containerPost,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 29\n      }\n    }, this.props.postLoading ? /*#__PURE__*/React.createElement(\"div\", {\n      id: \"loader\",\n      className: \"text-center mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 83\n      }\n    }, \"Loading Posts...\")) : /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.containerPost,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 41\n      }\n    }, \"Posts\"), /*#__PURE__*/React.createElement(PostList, {\n      commentClicked: this.onClickHandler,\n      account: this.props.account,\n      commentPost: this.props.commentPost,\n      posts: this.props.postSectionPosts,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.scrollSection,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.scrollIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.scrollIconDot,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 72\n      }\n    }))))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 29\n      }\n    }, !this.state.commentShow ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 60\n      }\n    }) : /*#__PURE__*/React.createElement(CommentSection, {\n      comments: this.state.comments,\n      postid: this.state.postid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 70\n      }\n    })))));\n  }\n\n}\n\nexport default PostSection;","map":{"version":3,"sources":["C:/Users/VASILISVITTIS/Documents/main/src/components/posts/PostSection.js"],"names":["classes","React","Component","Container","Col","Row","PostList","CommentSection","PostSection","componentWillMount","fetchData","props","blogPost","post","methods","posts","state","postid","call","setState","commentsLength","numberOfComments","comments","i","comment","getComment","id","onClickHandler","postId","commentShow","constructor","bind","render","background","cube","loading","containerFluid","rowFinder","containerPost","postLoading","title","account","commentPost","postSectionPosts","scrollSection","scrollIcon","scrollIconDot"],"mappings":"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","sourcesContent":["import classes from './PostSection.module.css'\r\nimport React, {Component} from 'react'\r\nimport {Container, Col, Row} from 'react-bootstrap'\r\nimport PostList from \"./PostList\";\r\nimport CommentSection from '../comments/CommentSection'\r\n\r\n\r\nclass PostSection extends Component {\r\n\r\n    async componentWillMount() {\r\n\r\n        await this.fetchData()\r\n    }\r\n    async fetchData() {\r\n        if(this.props.blogPost !=null) {\r\n            const post = await this.props.blogPost.methods.posts(this.state.postid).call()\r\n            this.setState({commentsLength: post.numberOfComments})\r\n            this.setState({comments: []})\r\n            for (var i = 1; i <= this.state.commentsLength; i++) {\r\n                const comment = await this.props.blogPost.methods.getComment(post.id, i).call();\r\n                this.setState({\r\n                    comments: [...this.state.comments, comment]\r\n                })\r\n            }\r\n        }\r\n    }\r\n    async onClickHandler(postId) {\r\n\r\n        // this.state.postid = postId\r\n        this.setState({commentShow: true})\r\n        this.setState({postid: postId}, async function () {\r\n            const post = await this.props.blogPost.methods.posts(this.state.postid).call()\r\n            this.setState({commentsLength: post.numberOfComments})\r\n            this.setState({ comments: []})\r\n            for (var i = 1; i <= this.state.commentsLength; i++) {\r\n                const comment = await this.props.blogPost.methods.getComment(post.id,i).call();\r\n                this.setState({\r\n                    comments: [...this.state.comments, comment]\r\n                })\r\n            }\r\n            this.setState({commentShow: true})\r\n        })\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            commentShow: false,\r\n            commentsLength: 0,\r\n            postid: 0,\r\n            comments: []\r\n        }\r\n        this.onClickHandler = this.onClickHandler.bind(this)\r\n    }\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div className={classes.background}>\r\n                <div className={classes.cube}/>\r\n                <div className={classes.cube}/>\r\n                <div className={classes.cube}/>\r\n                <div className={classes.cube}/>\r\n                <div className={classes.cube}/>\r\n                <div className={classes.cube}/>\r\n\r\n                {this.props.loading ? <div id=\"loader\" className=\"text-center mt-5\"><p>Loading...</p></div>\r\n                    :\r\n                    (<Container fluid className={classes.containerFluid}>\r\n\r\n                        <Row className={classes.rowFinder}>\r\n\r\n                            <Col className={classes.containerPost}>\r\n\r\n\r\n                                {this.props.postLoading ?\r\n                                    <div id=\"loader\" className=\"text-center mt-5\"><p>Loading Posts...</p></div> :\r\n                                    <div className={classes.containerPost}>\r\n                                        <div className={classes.title}>Posts</div>\r\n                                        <PostList commentClicked={this.onClickHandler}\r\n                                                  account={this.props.account}\r\n                                                  commentPost={this.props.commentPost}\r\n                                                  posts={this.props.postSectionPosts}/>\r\n                                        <div className={classes.scrollSection}>\r\n                                                                <span className={classes.scrollIcon}>\r\n                                                                       <span className={classes.scrollIconDot}/>\r\n                                                                </span>\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n                            </Col>\r\n                            <Col>\r\n\r\n                                {!this.state.commentShow ? <div /> : <CommentSection\r\n                                    comments={this.state.comments}\r\n                                    postid={this.state.postid}\r\n                                />}\r\n\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>)}\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default PostSection"]},"metadata":{},"sourceType":"module"}