{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VASILISVITTIS\\\\Documents\\\\main\\\\src\\\\components\\\\posts\\\\PostSection.js\";\nimport classes from './PostSection.module.css';\nimport React, { Component, useEffect } from 'react';\nimport Web3 from 'web3';\nimport { Container, Col, FloatingLabel, FormControl, Row } from 'react-bootstrap';\nimport CardFormatter from \"../ui/CardFormatter\";\nimport Blog from '../../abis/Blog.json';\nimport PostList from \"./PostList\";\nimport NavigationBar from \"../layout/Navbar\";\nimport Banner from \"../layout/Banner\";\nimport Form from \"../ui/Form\";\n\nclass PostSection extends Component {\n  async componentWillMount() {\n    await this.fetchData();\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      userConnected: false,\n      blogPost: null,\n      postCount: 0,\n      posts: [],\n      loading: true\n    }; // this.createPost = this.createPost.bind(this)\n    // this.tipPost = this.tipPost.bind(this)\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum); // await window.ethereum.enable()\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n    }\n  }\n\n  async fetchData() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum); // } else\n      // if (window.web3) {\n      // window.web3 = new Web3(window.web3.currentProvider)\n      // window.web3 = new Web3(window.ethereum)\n\n      console.log('use effect');\n      const web3 = window.web3;\n      const networkId = await web3.eth.net.getId();\n      console.log(networkId.toString());\n      const networkData = Blog.networks[networkId];\n      console.log(networkData);\n\n      if (networkData) {\n        const blogPost = new web3.eth.Contract(Blog.abi, networkData.address);\n        this.setState({\n          blogPost\n        });\n        const postCount = await blogPost.methods.postCount().call();\n        this.setState({\n          postCount\n        });\n        console.log(\"Number of Posts: \" + postCount); // Load Posts\n\n        for (var i = 1; i <= postCount; i++) {\n          const post = await blogPost.methods.posts(i).call();\n          this.setState({\n            posts: [...this.state.posts, post]\n          });\n        } // Sort posts. Show highest tipped posts first\n\n\n        this.setState({\n          posts: this.state.posts.sort((a, b) => b.tipAmount - a.tipAmount)\n        });\n        this.setState({\n          loading: false\n        });\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.background,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.cube,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.cube,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.cube,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.cube,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.cube,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.cube,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }), this.state.loading ? /*#__PURE__*/React.createElement(\"div\", {\n      id: \"loader\",\n      className: \"text-center mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 39\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 85\n      }\n    }, \"Loading...\")) : /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      className: classes.containerFluid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: classes.rowFinder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      lg: 6,\n      className: classes.containerPost,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 33\n      }\n    }, !this.props.input ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 58\n      }\n    }) : /*#__PURE__*/React.createElement(Form, {\n      address: this.props.input,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(PostList, {\n      posts: this.state.posts,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      lg: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 33\n      }\n    }, \" \"))));\n  }\n\n}\n\nexport default PostSection;","map":{"version":3,"sources":["C:/Users/VASILISVITTIS/Documents/main/src/components/posts/PostSection.js"],"names":["classes","React","Component","useEffect","Web3","Container","Col","FloatingLabel","FormControl","Row","CardFormatter","Blog","PostList","NavigationBar","Banner","Form","PostSection","componentWillMount","fetchData","constructor","props","state","userConnected","blogPost","postCount","posts","loading","loadWeb3","window","ethereum","web3","currentProvider","alert","console","log","networkId","eth","net","getId","toString","networkData","networks","Contract","abi","address","setState","methods","call","i","post","sort","a","b","tipAmount","render","background","cube","containerFluid","rowFinder","containerPost","input"],"mappings":"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","sourcesContent":["import classes from './PostSection.module.css'\r\nimport React, {Component, useEffect} from 'react'\r\nimport Web3 from 'web3';\r\nimport {Container, Col, FloatingLabel, FormControl, Row} from 'react-bootstrap'\r\nimport CardFormatter from \"../ui/CardFormatter\";\r\nimport Blog from '../../abis/Blog.json'\r\nimport PostList from \"./PostList\";\r\nimport NavigationBar from \"../layout/Navbar\";\r\nimport Banner from \"../layout/Banner\";\r\nimport Form from \"../ui/Form\";\r\n\r\n\r\nclass PostSection extends Component<{ account?: string }> {\r\n\r\n    async componentWillMount() {\r\n        await this.fetchData()\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            userConnected: false,\r\n            blogPost: null,\r\n            postCount: 0,\r\n            posts: [],\r\n            loading: true\r\n        }\r\n\r\n        // this.createPost = this.createPost.bind(this)\r\n        // this.tipPost = this.tipPost.bind(this)\r\n    }\r\n    async loadWeb3() {\r\n        if (window.ethereum) {\r\n            window.web3 = new Web3(window.ethereum)\r\n            // await window.ethereum.enable()\r\n        }\r\n        else if (window.web3) {\r\n            window.web3 = new Web3(window.web3.currentProvider)\r\n        }\r\n        else {\r\n            window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\r\n        }\r\n    }\r\n\r\n    async fetchData() {\r\n\r\n        if (window.ethereum) {\r\n            window.web3 = new Web3(window.ethereum)\r\n            // } else\r\n        // if (window.web3) {\r\n                // window.web3 = new Web3(window.web3.currentProvider)\r\n            // window.web3 = new Web3(window.ethereum)\r\n\r\n            console.log('use effect')\r\n            const web3 = window.web3\r\n            const networkId = await web3.eth.net.getId()\r\n            console.log(networkId.toString())\r\n            const networkData = Blog.networks[networkId]\r\n            console.log(networkData)\r\n            if (networkData) {\r\n                const blogPost = new web3.eth.Contract(Blog.abi, networkData.address)\r\n                this.setState({blogPost})\r\n                const postCount = await blogPost.methods.postCount().call()\r\n                this.setState({postCount})\r\n                console.log(\"Number of Posts: \" + postCount)\r\n                // Load Posts\r\n                for (var i = 1; i <= postCount; i++) {\r\n                    const post = await blogPost.methods.posts(i).call()\r\n                    this.setState({\r\n                        posts: [...this.state.posts, post]\r\n                    })\r\n                }\r\n                // Sort posts. Show highest tipped posts first\r\n                this.setState({\r\n                    posts: this.state.posts.sort((a, b) => b.tipAmount - a.tipAmount)\r\n                })\r\n                this.setState({loading: false})\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div className={classes.background}>\r\n                <div className={classes.cube}/>\r\n                <div className={classes.cube}/>\r\n                <div className={classes.cube}/>\r\n                <div className={classes.cube}/>\r\n                <div className={classes.cube}/>\r\n                <div className={classes.cube}/>\r\n\r\n                {this.state.loading ? <div id=\"loader\" className=\"text-center mt-5\"><p>Loading...</p></div>\r\n                    :\r\n                    (<Container fluid className={classes.containerFluid}>\r\n\r\n                            <Row className={classes.rowFinder}>\r\n                                <Col lg={6} className={classes.containerPost}>\r\n\r\n                                    {!this.props.input ? <div/>\r\n                                        :\r\n                                        <Form address={this.props.input}/>\r\n                                    }\r\n                                    <PostList  posts={this.state.posts}/>\r\n\r\n                                </Col>\r\n                                <Col lg={6}> </Col>\r\n                            </Row>\r\n                        </Container>\r\n\r\n                    )\r\n\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PostSection"]},"metadata":{},"sourceType":"module"}