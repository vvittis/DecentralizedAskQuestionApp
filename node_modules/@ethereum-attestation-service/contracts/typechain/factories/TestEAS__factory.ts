/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TestEAS, TestEASInterface } from "../TestEAS";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IASRegistry",
        name: "aoRegistry",
        type: "address",
      },
      {
        internalType: "contract IEIP712Verifier",
        name: "eip712Verifier",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "attester",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "uuid",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "schema",
        type: "bytes32",
      },
    ],
    name: "Attested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "attester",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "uuid",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "schema",
        type: "bytes32",
      },
    ],
    name: "Revoked",
    type: "event",
  },
  {
    inputs: [],
    name: "VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "schema",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "expirationTime",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "refUUID",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "attest",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "schema",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "expirationTime",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "refUUID",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "attester",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "attestByDelegation",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getASRegistry",
    outputs: [
      {
        internalType: "contract IASRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "uuid",
        type: "bytes32",
      },
    ],
    name: "getAttestation",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "uuid",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "schema",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "address",
            name: "attester",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "time",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expirationTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "revocationTime",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "refUUID",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Attestation",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAttestationsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEIP712Verifier",
    outputs: [
      {
        internalType: "contract IEIP712Verifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "schema",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "reverseOrder",
        type: "bool",
      },
    ],
    name: "getReceivedAttestationUUIDs",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "schema",
        type: "bytes32",
      },
    ],
    name: "getReceivedAttestationUUIDsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "uuid",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "reverseOrder",
        type: "bool",
      },
    ],
    name: "getRelatedAttestationUUIDs",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "uuid",
        type: "bytes32",
      },
    ],
    name: "getRelatedAttestationUUIDsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "attester",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "schema",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "reverseOrder",
        type: "bool",
      },
    ],
    name: "getSentAttestationUUIDs",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "schema",
        type: "bytes32",
      },
    ],
    name: "getSentAttestationUUIDsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "uuid",
        type: "bytes32",
      },
    ],
    name: "isAttestationValid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "uuid",
        type: "bytes32",
      },
    ],
    name: "revoke",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "uuid",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "attester",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "revokeByDelegation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162001dc038038062001dc08339810160408190526200003491620000b3565b81816001600160a01b038216620000685760405162461bcd60e51b81526004016200005f90620000f1565b60405180910390fd5b6001600160a01b038116620000915760405162461bcd60e51b81526004016200005f9062000128565b6001600160601b0319606092831b8116608052911b1660a05250620001789050565b60008060408385031215620000c6578182fd5b8251620000d3816200015f565b6020840151909250620000e6816200015f565b809150509250929050565b60208082526014908201527f4552525f494e56414c49445f5245474953545259000000000000000000000000604082015260600190565b6020808252601b908201527f4552525f494e56414c49445f4549503731325f56455249464945520000000000604082015260600190565b6001600160a01b03811681146200017557600080fd5b50565b60805160601c60a05160601c611c0f620001b160003980610405528061073052806109b15250806105275280610c045250611c0f6000f3fe60806040526004361061010e5760003560e01c8063a3112a64116100a5578063d8c5ebd411610074578063ef0a309811610059578063ef0a3098146102ef578063f96e501314610304578063ffa1ad74146103195761010e565b8063d8c5ebd4146102a2578063e30bb563146102c25761010e565b8063a3112a6414610213578063b75c7dc614610240578063c042d88f14610262578063d87647b2146102825761010e565b80631bc9a07a116100e15780631bc9a07a146101ab5780637f04f284146101cb57806381fa6cd3146101eb578063930ed013146102005761010e565b80630560f90f1461011357806309a954cd14610149578063105152981461015c57806315cd31a114610189575b600080fd5b34801561011f57600080fd5b5061013361012e366004611581565b61033b565b6040516101409190611922565b60405180910390f35b6101336101573660046113f0565b610350565b34801561016857600080fd5b5061017c610177366004611509565b610370565b60405161014091906118d3565b34801561019557600080fd5b5061019e610403565b6040516101409190611967565b3480156101b757600080fd5b5061017c6101c6366004611509565b610427565b3480156101d757600080fd5b5061017c6101e63660046115e8565b6104ae565b3480156101f757600080fd5b5061019e610525565b61013361020e366004611461565b610549565b34801561021f57600080fd5b5061023361022e366004611581565b610571565b6040516101409190611b1c565b34801561024c57600080fd5b5061026061025b366004611581565b6106b1565b005b34801561026e57600080fd5b5061013361027d3660046113c5565b6106be565b34801561028e57600080fd5b5061026061029d366004611599565b6106f3565b3480156102ae57600080fd5b506101336102bd3660046113c5565b6107b0565b3480156102ce57600080fd5b506102e26102dd366004611581565b6107e5565b6040516101409190611917565b3480156102fb57600080fd5b506101336107f9565b34801561031057600080fd5b506101336107ff565b34801561032557600080fd5b5061032e610805565b6040516101409190611988565b6000818152602081905260409020545b919050565b600061036087878787878761083e565b6005819055979650505050505050565b73ffffffffffffffffffffffffffffffffffffffff8516600090815260016020908152604080832087845282529182902080548351818402810184019094528084526060936103f993909291908301828280156103ec57602002820191906000526020600020905b8154815260200190600101908083116103d8575b505050505085858561085a565b9695505050505050565b7f000000000000000000000000000000000000000000000000000000000000000090565b73ffffffffffffffffffffffffffffffffffffffff8516600090815260026020908152604080832087845282529182902080548351818402810184019094528084526060936103f993909291908301828280156103ec57602002820191906000526020600020908154815260200190600101908083116103d857505050505085858561085a565b606061051a6000808781526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156103ec57602002820191906000526020600020908154815260200190600101908083116103d857505050505085858561085a565b90505b949350505050565b7f000000000000000000000000000000000000000000000000000000000000000090565b600061055d8b8b8b8b8b8b8b8b8b8b610971565b60058190559b9a5050505050505050505050565b6105796111ec565b600082815260036020818152604092839020835161012081018552815481526001808301548285015260028084015473ffffffffffffffffffffffffffffffffffffffff9081168489015295840154909516606083015260048301546080830152600583015460a0830152600683015460c0830152600783015460e083015260088301805487516101009382161584027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190911696909604601f810186900486028701860190975286865291959294908601939092908301828280156106a15780601f10610676576101008083540402835291602001916106a1565b820191906000526020600020905b81548152906001019060200180831161068457829003601f168201915b5050505050815250509050919050565b6106bb8133610a48565b50565b73ffffffffffffffffffffffffffffffffffffffff919091166000908152600260209081526040808320938352929052205490565b6040517f1863f01d00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690631863f01d9061076d908890889088908890889060040161192b565b600060405180830381600087803b15801561078757600080fd5b505af115801561079b573d6000803e3d6000fd5b505050506107a98585610a48565b5050505050565b73ffffffffffffffffffffffffffffffffffffffff919091166000908152600160209081526040808320938352929052205490565b600090815260036020526040902054151590565b60055490565b60045490565b6040518060400160405280600381526020017f302e34000000000000000000000000000000000000000000000000000000000081525081565b600061084f87878787878733610b89565b979650505050505050565b83516060908061087a57505060408051600081526020810190915261051d565b8085106108bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b390611a09565b60405180910390fd5b838581018210156108cc57508481035b60008167ffffffffffffffff811180156108e557600080fd5b5060405190808252806020026020018201604052801561090f578160200160208202803683370190505b50905060005b8281101561096557888661092b57818901610934565b81890160010185035b8151811061093e57fe5b602002602001015182828151811061095257fe5b6020908102919091010152600101610915565b50979650505050505050565b6040517f6aeb49a500000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690636aeb49a5906109f8908e908e908e908e908e908e908e908e908e908e90600401611800565b600060405180830381600087803b158015610a1257600080fd5b505af1158015610a26573d6000803e3d6000fd5b50505050610a398b8b8b8b8b8b8b610b89565b9b9a5050505050505050505050565b60008281526003602052604090208054610a8e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b390611a40565b600381015473ffffffffffffffffffffffffffffffffffffffff838116911614610ae4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b390611ae5565b600681015415610b20576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b3906119d2565b42600682015560028101546001820154604051859273ffffffffffffffffffffffffffffffffffffffff808716939116917ff930a6e2523c9cc298691873087a740550b8fc85a0680830414c148ed927f61591610b7c91611922565b60405180910390a4505050565b6000428611610bc4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b390611aae565b6040517f72487d5200000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906372487d5290610c39908b90600401611922565b60006040518083038186803b158015610c5157600080fd5b505afa158015610c65573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610cab9190810190611628565b8051909150610ce6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b390611a77565b602081015173ffffffffffffffffffffffffffffffffffffffff161580610da55750806020015173ffffffffffffffffffffffffffffffffffffffff16634131b2378a836060015188888c89346040518863ffffffff1660e01b8152600401610d559796959493929190611871565b60206040518083038186803b158015610d6d57600080fd5b505afa158015610d81573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610da5919061155e565b610ddb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b39061199b565b60006040518061012001604052806000801b81526020018a81526020018b73ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020014281526020018981526020016000815260200188815260200187878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525093909452509293509150610e9090508261116a565b905080826000018181525050600160008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008b8152602001908152602001600020819080600181540180825580915050600190039060005260206000200160009091909190915055600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008b81526020019081526020016000208190806001815401808255809150506001900390600052602060002001600090919091909150558160036000838152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816004015560a0820151816005015560c0820151816006015560e0820151816007015561010082015181600801908051906020019061108592919061123a565b50506004805460010190555087156110f6576110a0886107e5565b6110d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b390611a40565b600088815260208181526040822080546001810182559083529120018190555b808573ffffffffffffffffffffffffffffffffffffffff168c73ffffffffffffffffffffffffffffffffffffffff167f8bf46bf4cfd674fa735a3d63ec1c9ad4153f033c290341f3a588b75685141b358d6040516111549190611922565b60405180910390a49a9950505050505050505050565b6020808201516040808401516060850151608086015160a087015161010088015185518087018752600181527f4000000000000000000000000000000000000000000000000000000000000000818a015260045496516000996111cf99989101611774565b604051602081830303815290604052805190602001209050919050565b604080516101208101825260008082526020820181905291810182905260608082018390526080820183905260a0820183905260c0820183905260e082019290925261010081019190915290565b828054600181600116156101000203166002900490600052602060002090601f01602090048101928261127057600085556112b6565b82601f1061128957805160ff19168380011785556112b6565b828001600101855582156112b6579182015b828111156112b657825182559160200191906001019061129b565b506112c29291506112c6565b5090565b5b808211156112c257600081556001016112c7565b60008083601f8401126112ec578182fd5b50813567ffffffffffffffff811115611303578182fd5b60208301915083602082850101111561131b57600080fd5b9250929050565b600082601f830112611332578081fd5b815167ffffffffffffffff8082111561134757fe5b60405160207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f850116820101818110838211171561138357fe5b60405282815284830160200186101561139a578384fd5b6113ab836020830160208801611ba2565b95945050505050565b803560ff8116811461034b57600080fd5b600080604083850312156113d7578182fd5b82356113e281611bd2565b946020939093013593505050565b60008060008060008060a08789031215611408578182fd5b863561141381611bd2565b9550602087013594506040870135935060608701359250608087013567ffffffffffffffff811115611443578283fd5b61144f89828a016112db565b979a9699509497509295939492505050565b6000806000806000806000806000806101208b8d031215611480578384fd5b8a3561148b81611bd2565b995060208b0135985060408b0135975060608b0135965060808b013567ffffffffffffffff8111156114bb578485fd5b6114c78d828e016112db565b90975095505060a08b01356114db81611bd2565b93506114e960c08c016113b4565b925060e08b013591506101008b013590509295989b9194979a5092959850565b600080600080600060a08688031215611520578081fd5b853561152b81611bd2565b9450602086013593506040860135925060608601359150608086013561155081611bf4565b809150509295509295909350565b60006020828403121561156f578081fd5b815161157a81611bf4565b9392505050565b600060208284031215611592578081fd5b5035919050565b600080600080600060a086880312156115b0578081fd5b8535945060208601356115c281611bd2565b93506115d0604087016113b4565b94979396509394606081013594506080013592915050565b600080600080608085870312156115fd578182fd5b843593506020850135925060408501359150606085013561161d81611bf4565b939692955090935050565b600060208284031215611639578081fd5b815167ffffffffffffffff80821115611650578283fd5b9083019060808286031215611663578283fd5b60405160808101818110838211171561167857fe5b60405282518152602083015161168d81611bd2565b6020820152604083810151908201526060830151828111156116ad578485fd5b6116b987828601611322565b60608301525095945050505050565b73ffffffffffffffffffffffffffffffffffffffff169052565b600082845282826020860137806020848601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f85011685010190509392505050565b60008151808452611742816020860160208601611ba2565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60008982527fffffffffffffffffffffffffffffffffffffffff000000000000000000000000808a60601b166020840152808960601b1660348401525086604883015285606883015284516117d0816088850160208901611ba2565b8451908301906117e7816088840160208901611ba2565b016088810193909352505060a801979650505050505050565b600061012073ffffffffffffffffffffffffffffffffffffffff808e1684528c60208501528b60408501528a60608501528160808501526118448285018a8c6116e2565b971660a0840152505060ff9390931660c084015260e0830191909152610100909101529695505050505050565b600073ffffffffffffffffffffffffffffffffffffffff808a16835260c060208401526118a160c084018a61172a565b83810360408501526118b481898b6116e2565b60608501979097525093909316608082015260a0015250949350505050565b6020808252825182820181905260009190848201906040850190845b8181101561190b578351835292840192918401916001016118ef565b50909695505050505050565b901515815260200190565b90815260200190565b94855273ffffffffffffffffffffffffffffffffffffffff93909316602085015260ff9190911660408401526060830152608082015260a00190565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b60006020825261157a602083018461172a565b6020808252601c908201527f4552525f494e56414c49445f4154544553544154494f4e5f4441544100000000604082015260600190565b60208082526013908201527f4552525f414c52454144595f5245564f4b454400000000000000000000000000604082015260600190565b60208082526012908201527f4552525f494e56414c49445f4f46465345540000000000000000000000000000604082015260600190565b60208082526012908201527f4552525f4e4f5f4154544553544154494f4e0000000000000000000000000000604082015260600190565b6020808252600e908201527f4552525f494e56414c49445f4153000000000000000000000000000000000000604082015260600190565b6020808252601b908201527f4552525f494e56414c49445f45585049524154494f4e5f54494d450000000000604082015260600190565b60208082526011908201527f4552525f4143434553535f44454e494544000000000000000000000000000000604082015260600190565b60006020825282516020830152602083015160408301526040830151611b4560608401826116c8565b506060830151611b5860808401826116c8565b50608083015160a083015260a083015160c083015260c083015160e083015260e083015161010081818501528085015191505061012080818501525061051d61014084018261172a565b60005b83811015611bbd578181015183820152602001611ba5565b83811115611bcc576000848401525b50505050565b73ffffffffffffffffffffffffffffffffffffffff811681146106bb57600080fd5b80151581146106bb57600080fdfea164736f6c6343000706000a";

export class TestEAS__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    aoRegistry: string,
    eip712Verifier: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestEAS> {
    return super.deploy(
      aoRegistry,
      eip712Verifier,
      overrides || {}
    ) as Promise<TestEAS>;
  }
  getDeployTransaction(
    aoRegistry: string,
    eip712Verifier: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      aoRegistry,
      eip712Verifier,
      overrides || {}
    );
  }
  attach(address: string): TestEAS {
    return super.attach(address) as TestEAS;
  }
  connect(signer: Signer): TestEAS__factory {
    return super.connect(signer) as TestEAS__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestEASInterface {
    return new utils.Interface(_abi) as TestEASInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestEAS {
    return new Contract(address, _abi, signerOrProvider) as TestEAS;
  }
}
