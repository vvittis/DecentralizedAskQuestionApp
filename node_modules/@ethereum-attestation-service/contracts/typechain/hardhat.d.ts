/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "ASRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ASRegistry__factory>;
    getContractFactory(
      name: "EAS",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EAS__factory>;
    getContractFactory(
      name: "EIP712Verifier",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EIP712Verifier__factory>;
    getContractFactory(
      name: "IASRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IASRegistry__factory>;
    getContractFactory(
      name: "IASVerifier",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IASVerifier__factory>;
    getContractFactory(
      name: "IEAS",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IEAS__factory>;
    getContractFactory(
      name: "IEIP712Verifier",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IEIP712Verifier__factory>;
    getContractFactory(
      name: "TestEAS",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestEAS__factory>;
    getContractFactory(
      name: "TestASAttestationVerifier",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestASAttestationVerifier__factory>;
    getContractFactory(
      name: "TestASAttesterVerifier",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestASAttesterVerifier__factory>;
    getContractFactory(
      name: "TestASDataVerifier",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestASDataVerifier__factory>;
    getContractFactory(
      name: "TestASExpirationTimeVerifier",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestASExpirationTimeVerifier__factory>;
    getContractFactory(
      name: "TestASRecipientVerifier",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestASRecipientVerifier__factory>;
    getContractFactory(
      name: "TestASValueVerifier",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestASValueVerifier__factory>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
  }
}
