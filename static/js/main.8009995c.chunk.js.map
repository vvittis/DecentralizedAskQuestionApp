{"version":3,"sources":["components/layout/Banner.module.css","components/layout/Layout.module.css","components/layout/Navbar.module.css","components/ui/Card.module.css","components/layout/Navbar.js","components/layout/Banner.js","components/ui/Card.js","components/posts/PostSection.js","components/layout/Layout.js","components/App.js","serviceWorker.js","index.js","components/posts/PostSection.module.css"],"names":["module","exports","NavigationBar","props","Navbar","className","classes","nav","Container","fluid","Toggle","Collapse","Text","Banner","id","box","heading","type","loop","wrapper","steps","React","Component","Card","card","children","PostSection","background","cube","form","class","FloatingLabel","controlId","label","FormControl","as","placeholder","Layout","container","Row","main","Col","lg","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById"],"mappings":"gFACAA,EAAOC,QAAU,CAAC,IAAM,oBAAoB,QAAU,wBAAwB,KAAO,uB,mBCArFD,EAAOC,QAAU,CAAC,KAAO,qBAAqB,UAAY,4B,mBCA1DD,EAAOC,QAAU,CAAC,IAAM,sB,mBCAxBD,EAAOC,QAAU,CAAC,KAAO,qB,qNCmBVC,MAjBf,SAAuBC,GAEnB,OACI,kBAACC,EAAA,EAAD,CAAQC,UAAWC,IAAQC,KACvB,kBAACC,EAAA,EAAD,CAAWC,OAAK,GACZ,kBAACL,EAAA,EAAOM,OAAR,MACA,kBAACN,EAAA,EAAOO,SAAR,CAAiBN,UAAU,uBACvB,kBAACD,EAAA,EAAOQ,KAAR,qE,yDCiBLC,E,4JArBX,WACI,OAEI,yBAAKC,GAAIR,IAAQS,IAAKV,UAAW,eAE7B,yBAAKS,GAAIR,IAAQU,QAASX,UAAW,gBAArC,cAEe,6BAFf,kBAII,yBAAKS,GAAIR,IAAQW,MACb,kBAAC,IAAD,CACIC,KAAM,EACNC,QAAS,IACTC,MAAO,CAAC,QAAS,IAAM,WAAY,IAAM,YAAa,a,GAf7DC,IAAMC,W,iDCSZC,MAVf,SAAcpB,GACV,OACI,yBAAKE,UAAWC,IAAQkB,MACnBrB,EAAMsB,WCqBJC,MAtBf,WACI,OAEI,yBAAKrB,UAAWC,IAAQqB,YACpB,yBAAKtB,UAAWC,IAAQsB,OACxB,yBAAKvB,UAAWC,IAAQsB,OACxB,yBAAKvB,UAAWC,IAAQsB,OACxB,yBAAKvB,UAAWC,IAAQsB,OACxB,yBAAKvB,UAAWC,IAAQsB,OACxB,yBAAKvB,UAAWC,IAAQsB,OACxB,kBAAC,EAAD,KACI,yBAAKd,GAAIR,IAAQuB,KAAMC,MAAO,cAC1B,kBAACC,EAAA,EAAD,CAAeC,UAAU,mBAAmBC,MAAM,WAAW5B,UAAU,QACnE,kBAAC6B,EAAA,EAAD,CAAaC,GAAG,WAAWC,YAAY,4BAVvD,OCsBOC,MArBf,SAAgBlC,GACZ,OAEI,kBAACK,EAAA,EAAD,CAAWC,OAAK,EAACJ,UAAWC,IAAQgC,UAAWR,MAAO,aAClD,kBAAC,EAAD,MACA,kBAACS,EAAA,EAAD,CAAKlC,UAAWC,IAAQkC,MACpB,kBAACC,EAAA,EAAD,CAAKC,GAAI,GAAT,IAAa,kBAAC,EAAD,MAAb,KACA,kBAACD,EAAA,EAAD,CAAKC,GAAI,GAAT,IAAa,kBAAC,EAAD,MAAb,MAGJ,4BAAQ5B,GAAG,gBAAgBT,UAAU,4CACjC,yBAAKA,UAAU,yBACX,kECJLsC,MAXf,WAEI,OACI,kBAAC,EAAD,OCGYC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAGJ,kBAAC,EAAD,MAASC,SAASC,eAAe,U,kBCTtCpD,EAAOC,QAAU,CAAC,WAAa,gCAAgC,SAAW,8BAA8B,KAAO,0BAA0B,KAAO,6B","file":"static/js/main.8009995c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Banner_box__2SdYI\",\"heading\":\"Banner_heading__3HDqF\",\"type\":\"Banner_type__3Klrn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__a4__u\",\"container\":\"Layout_container__2AGid\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2wxcJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__12Cv5\"};","import React from 'react'\r\nimport {Container, Navbar} from \"react-bootstrap\";\r\nimport classes from './Navbar.module.css'\r\nfunction NavigationBar(props) {\r\n\r\n    return (\r\n        <Navbar className={classes.nav}>\r\n            <Container fluid>\r\n                <Navbar.Toggle/>\r\n                <Navbar.Collapse className=\"justify-content-end\">\r\n                    <Navbar.Text>\r\n                        Signed in as: 0x0A1de6B8A7E740c49883Ccd3f929A5fD83bA455F\r\n                         {/*{props.account}*/}\r\n                    </Navbar.Text>\r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default NavigationBar;\r\n","import classes from './Banner.module.css'\r\nimport React from 'react'\r\nimport Typical from 'react-typical';\r\n\r\nclass Banner extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div id={classes.box} className={' p-0 p-sm-5'}>\r\n\r\n                <div id={classes.heading} className={' p-0 pt-sm-5'}>\r\n\r\n                    A Chat App <br/> where you can\r\n                </div>\r\n                    <div id={classes.type}>\r\n                        <Typical\r\n                            loop={1} // Infinity\r\n                            wrapper={\"b\"}\r\n                            steps={[' Post', 1000, ' Comment', 1000, ' Interact', 1000]}\r\n                        />\r\n                    </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Banner;","import classes from \"./Card.module.css\"\r\nimport React from 'react'\r\n\r\nfunction Card(props) {\r\n    return (\r\n        <div className={classes.card}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default Card","import classes from './PostSection.module.css'\r\nimport React from 'react'\r\nimport {FloatingLabel, FormControl} from 'react-bootstrap'\r\nimport Card from \"../ui/Card\";\r\n\r\nfunction PostSection() {\r\n    return (\r\n\r\n        <div className={classes.background}>\r\n            <div className={classes.cube}/>\r\n            <div className={classes.cube}/>\r\n            <div className={classes.cube}/>\r\n            <div className={classes.cube}/>\r\n            <div className={classes.cube}/>\r\n            <div className={classes.cube}/>\r\n            <Card>\r\n                <div id={classes.form} class={\"p-0 p-sm-5\"}>\r\n                    <FloatingLabel controlId=\"floatingTextarea\" label=\"Comments\" className=\"mb-3\">\r\n                        <FormControl as=\"textarea\" placeholder=\"Leave a comment here\"/>\r\n                    </FloatingLabel>\r\n                </div>\r\n            </Card>\r\n            Hi\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostSection","import classes from './Layout.module.css'\r\nimport React from 'react'\r\nimport {Container, Row, Col} from 'react-bootstrap'\r\nimport Button from \"react-bootstrap/Button\";\r\nimport NavigationBar from \"./Navbar\";\r\nimport Banner from \"./Banner\";\r\nimport PostSection from \"../posts/PostSection\";\r\n\r\n\r\nfunction Layout(props) {\r\n    return (\r\n\r\n        <Container fluid className={classes.container} class={\"more-pens\"}>\r\n            <NavigationBar/>\r\n            <Row className={classes.main}>\r\n                <Col lg={4}> <Banner/> </Col>\r\n                <Col lg={8}> <PostSection/> </Col>\r\n            </Row>\r\n\r\n            <footer id=\"sticky-footer\" className=\"flex-shrink-0 py-4 bg-dark text-white-50\">\r\n                <div className=\"container text-center\">\r\n                    <small>Copyright &copy; Your Website</small>\r\n                </div>\r\n            </footer>\r\n\r\n        </Container>\r\n\r\n    )\r\n}\r\n\r\nexport default Layout","import React, {Component} from 'react';\nimport {Route, Switch} from 'react-router-dom';\nimport './App.css';\nimport Layout from \"./layout/Layout\";\nimport Button from 'react-bootstrap/Button'\n\nfunction App() {\n\n    return (\n        <Layout>\n\n        </Layout>\n\n    )\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import {BrowserRouter} from 'react-router-dom'\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n\r\n\r\n     <App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"PostSection_background__2yC37\",\"Gradient\":\"PostSection_Gradient__2p-k1\",\"form\":\"PostSection_form__3zCoK\",\"cube\":\"PostSection_cube__150Aw\"};"],"sourceRoot":""}